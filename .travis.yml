dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=dot

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1

    # Other architectures
    - env: TARGET=arm-linux-androideabi ARCH=arm API=24 DISABLE_TESTS=1

      # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly

before_install: set -e

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
      secure: "H++t8gTlcNKJMYZ+0GVcmCU4aaVqjmlkZMZ1uan74utL+1qp1K4ufL8tN2+1gO3z0r2cMpL6edzB+QMieupK5kKtroKwun8PFuwGO9CSj67ZM/XHxl/C/GMgtQtab1vwScQxcAJ4TLc8EXDTkAPFhnXMPgoNB+jStyTb5E92fozmTbTSrxIXB2WhTbnp4Lt4PtqvtVYBAL67q7s9ualoWXZnBoeyko9CQtUAfIV8tgrySwnA6BbzEZ/grFP/xUw3Ia7Am0oO+6TNbGkONxte8HoqtlagLGNr5ytfBUNpRa1O5YC6o7tpOrbWIhAY3Zr3sUyhe+gc8cwU09y5UDC4uHjezbMuwlk7C1Czwm9lCYW1p+SGVUGZpC3COChFpHJkKPhIIKCuizNPGyZWjk0ZlerwYOuTCsnaY5MnajMs4WqOs8aT/dLCwoXG9G7fKjxRcnDfXMEZcf24H+73Y6/IrkuYY0jlWa+lbh5sIayb4PcIB5IwZhgIjF1LQE/4P3T0UX7rdK0nEajrmcGFiygCarZP4FAuDD9lrmanqRYTtNh92FOl4m2Sbqh213btzIC0TCzwWod7gWydze3d3cTUjOXjJUFYkAzZAVluB8pf5nTl81Nd4PztYyVDhXei+HEAiwrwucShvtEWrySXG3IapN20/PoM1CAXqyzR0IABEOQ="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master
    - /^feat\//

notifications:
  email:
    on_success: never
