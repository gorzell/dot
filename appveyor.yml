version: 0.0.{build}

branches:
  only:
    - master

environment:
  global:
    CRATE_NAME: wan
    TOOLCHAIN: stable
  matrix:
    # - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc
    # - TARGET: i686-pc-windows-gnu
    - TARGET: x86_64-pc-windows-gnu

install:
  - ps: >-
      switch ($env:TARGET)
      {
        'x86_64-pc-windows-gnu' {
          $env:MSYSTEM = "MINGW64"
          $env:PATH = "C:\msys64\mingw64\bin;C:\msys64\usr\bin;" + $env:PATH
        }
        'i686-pc-windows-gnu' {
          $env:MSYSTEM = "MINGW32"
          $env:PATH = "C:\msys64\mingw32\bin;C:\msys64\usr\bin;" + $env:PATH
        }
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --no-modify-path --default-toolchain=%TOOLCHAIN% --default-host=%TARGET%
  - set PATH=%USERPROFILE%\.cargo\bin;%PATH%
  - rustc -V
  - cargo -V

build_script:
  - cargo build

test_script:
  - cargo test

after_test:
  - ps: $env:PKGNAME = "$($env:CRATE_NAME)-$(./ci/get-tagorbranch.ps1)-$($env:TARGET)"
  - ps: .\ci\deploy.ps1 -pkgname $env:PKGNAME

artifacts:
  - path: $(PKGNAME)

deploy:
  appveyor_repo_tag: true
  provider: GitHub
  draft: false
  prerelease: false
  force_update: true
  auth_token:
    secure: wf5/9pbr8Jl2sGXJSnm6m9qLT5Xu6cgbXZ8vO+81DnXcCUSvO2hZMW2mCSGNTVqW
  on:
    branch: master
    appveyor_repo_tag: true

cache:
  - C:\Users\appveyor\.cargo
  - C:\Users\appveyor\.rustup
  - target
