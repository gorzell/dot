use clap::{Arg, App, AppSettings, SubCommand};

fn build_cli_base() -> App<'static, 'static> {
  App::new(env!("CARGO_PKG_NAME"))
    .about(env!("CARGO_PKG_DESCRIPTION"))
    .version(env!("CARGO_PKG_VERSION"))
    .author(env!("CARGO_PKG_AUTHORS"))
    .setting(AppSettings::VersionlessSubcommands)
    .setting(AppSettings::SubcommandRequiredElseHelp)
}

pub fn build_cli() -> App<'static, 'static> {
  build_cli_base()
    .subcommand(SubCommand::with_name("check")
      .about("Check the files are correctly linked to the right places")
      .arg(Arg::with_name("verbose")
        .help("Use verbose output")
        .long("verbose")
        .short("v")))
    .subcommand(SubCommand::with_name("link")
      .about("Create all of the symbolic links into home directory")
      .arg(Arg::with_name("dry-run")
        .help("do not actually perform I/O operations")
        .long("dry-run")
        .short("n"))
      .arg(Arg::with_name("verbose")
        .help("Use verbose output")
        .long("verbose")
        .short("v")))
    .subcommand(SubCommand::with_name("clean")
      .about("Remote all of registered links from home directory")
      .arg(Arg::with_name("dry-run")
        .help("do not actually perform I/O operations")
        .long("dry-run")
        .short("n"))
      .arg(Arg::with_name("verbose")
        .help("Use verbose output")
        .long("verbose")
        .short("v")))
    .subcommand(SubCommand::with_name("root")
      .about("Show the location of dotfiles repository and exit"))
    .subcommand(SubCommand::with_name("clone")
      .about("Clone dotfiles repository from remote")
      .arg(Arg::with_name("url")
        .help("URL of remote repository")
        .required(true)
        .takes_value(true))
      .arg(Arg::with_name("dotdir")
        .help("Path of cloned repository (default: '$DOT_DIR')")
        .takes_value(true))
      .arg(Arg::with_name("dry-run")
        .help("do not actually perform I/O operations")
        .long("dry-run")
        .short("n")))
    .arg(Arg::with_name("wait-prompt")
      .long("wait-prompt")
      .hidden(true))
}
